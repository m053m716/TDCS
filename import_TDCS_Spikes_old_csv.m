function T = import_TDCS_Spikes_old_csv(filename, dataLines)
%IMPORTFILE Import data from a text file
%  T = IMPORTFILE(FILENAME) reads data from text file FILENAME for the
%  default selection.  Returns the data as a table.
%
%  T = IMPORTFILE(FILE, DATALINES) reads data for the specified row
%  interval(s) of text file FILENAME. Specify DATALINES as a positive
%  scalar integer or a N-by-2 array of positive scalar integers for
%  dis-contiguous row intervals.
%
%  Example:
%  T = importfile("J:\Rat\tDCS\2020_Stats\2020-03-17_1s-bin_Analyses\scratchwork\Spikes\TDCS_Spikes.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 31-Mar-2020 11:35:30

%% Input handling
% Default for filename
if nargin < 1
   filename = 'J:\Rat\tDCS\2020_Stats\2020-03-17_1s-bin_Analyses\scratchwork\Spikes\TDCS_Spikes.csv';
end

% If dataLines is not specified, define defaults
if nargin < 2
   dataLines = [2, Inf];
end

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 11);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["AnimalID", "ConditionID", "BlockID", "Var4", "EpochID", "Channel", "Cluster", "Spikes", "Duration", "FR", "LvR"];
opts.SelectedVariableNames = ["AnimalID", "ConditionID", "BlockID", "EpochID", "Channel", "Cluster", "Spikes", "Duration", "FR", "LvR"];
opts.VariableTypes = ["double", "double", "categorical", "string", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "Var4", "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["BlockID", "Var4"], "EmptyFieldRule", "auto");

% Import the data
T = readtable(filename, opts);
iMove = find(strcmp(T.Properties.VariableNames,'BlockID'),1,'first');
iBefore = find(strcmp(T.Properties.VariableNames,'AnimalID'),1,'first');
nCol = size(T,2); % movevar not present in R2017a
T = T(:,[setdiff(1:(iBefore-1),iMove), iMove, setdiff(iBefore:nCol,iMove)]);

% Make sure formatting is correct
T = fixChannelIDs(T);
T = fixConditionIDs(T);
T = appendColumn(T,'logFR','FR',@(x)log(x),true,'LvR');
% Compute Median change and remove empty elements
T.Properties.Description = 'Binned spike counts and LvR by epoch';
T = setTableOutcomeVariable(T,'LvR','');

end